/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RealmExport : Object containing details about a realm export. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RealmExport {
    /// The id of the export. 
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The id of the user who did the export. 
    #[serde(rename = "acting_user_id", skip_serializing_if = "Option::is_none")]
    pub acting_user_id: Option<i32>,
    /// The UNIX timestamp of when the export was made. 
    #[serde(rename = "export_time", skip_serializing_if = "Option::is_none")]
    pub export_time: Option<f32>,
    /// The timestamp of when the export was deleted. Null if it wasn't. 
    #[serde(rename = "deleted_timestamp", skip_serializing_if = "Option::is_none")]
    pub deleted_timestamp: Option<f32>,
    /// The timestamp of when the export failed. Null if it didn't. 
    #[serde(rename = "failed_timestamp", skip_serializing_if = "Option::is_none")]
    pub failed_timestamp: Option<f32>,
    /// The URL of the export. `null` if there's no URL. 
    #[serde(rename = "export_url", skip_serializing_if = "Option::is_none")]
    pub export_url: Option<String>,
    /// Whether the export is pending or not. 
    #[serde(rename = "pending", skip_serializing_if = "Option::is_none")]
    pub pending: Option<bool>,
}

impl RealmExport {
    /// Object containing details about a realm export. 
    pub fn new() -> RealmExport {
        RealmExport {
            id: None,
            acting_user_id: None,
            export_time: None,
            deleted_timestamp: None,
            failed_timestamp: None,
            export_url: None,
            pending: None,
        }
    }
}


