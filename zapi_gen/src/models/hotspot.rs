/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Hotspot : Dictionary containing details of a single hotspot. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Hotspot {
    /// The delay after which the user should be shown the hotspot. 
    #[serde(rename = "delay", skip_serializing_if = "Option::is_none")]
    pub delay: Option<f32>,
    /// The name of the hotspot. 
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The title of the hotspot, as will be displayed to the user. 
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The description of the hotspot, as will be displayed to the user. 
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl Hotspot {
    /// Dictionary containing details of a single hotspot. 
    pub fn new() -> Hotspot {
        Hotspot {
            delay: None,
            name: None,
            title: None,
            description: None,
        }
    }
}


