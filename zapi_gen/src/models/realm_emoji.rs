/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RealmEmoji : `{emoji_id}`: Object containing details about the emoji with  the specified ID. It has the following properties: 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RealmEmoji {
    /// The ID for this emoji, same as the object's key. 
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The user-friendly name for this emoji. Users in the organization can use this emoji by writing this name between colons (`:name  :`). 
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The path relative to the organization's URL where the emoji's image can be found. 
    #[serde(rename = "source_url", skip_serializing_if = "Option::is_none")]
    pub source_url: Option<String>,
    /// Whether the emoji has been deactivated or not. 
    #[serde(rename = "deactivated", skip_serializing_if = "Option::is_none")]
    pub deactivated: Option<bool>,
    /// The user ID of the user who uploaded the custom emoji. Will be null if the uploader is unknown.  **Changes**: New in Zulip 3.0 (feature level 7).  Previously was accessible via and `author` object with an `id` field. 
    #[serde(rename = "author_id", skip_serializing_if = "Option::is_none")]
    pub author_id: Option<i32>,
}

impl RealmEmoji {
    /// `{emoji_id}`: Object containing details about the emoji with  the specified ID. It has the following properties: 
    pub fn new() -> RealmEmoji {
        RealmEmoji {
            id: None,
            name: None,
            source_url: None,
            deactivated: None,
            author_id: None,
        }
    }
}


