/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Presence : `{client_name}`: Object containing the details of the user's presence on a particular platform with the client's platform name being the object key. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Presence {
    /// The client's platform name. 
    #[serde(rename = "client", skip_serializing_if = "Option::is_none")]
    pub client: Option<String>,
    /// The status of the user on this client. It is either `idle` or `active`. 
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second. 
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
    /// Whether the client is capable of showing mobile/push notifications to the user. 
    #[serde(rename = "pushable", skip_serializing_if = "Option::is_none")]
    pub pushable: Option<bool>,
}

impl Presence {
    /// `{client_name}`: Object containing the details of the user's presence on a particular platform with the client's platform name being the object key. 
    pub fn new() -> Presence {
        Presence {
            client: None,
            status: None,
            timestamp: None,
            pushable: None,
        }
    }
}

/// The status of the user on this client. It is either `idle` or `active`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "idle")]
    Idle,
    #[serde(rename = "active")]
    Active,
}

